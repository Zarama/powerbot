package stumpy3toes.scripts.stumpyisland.gui;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;

import stumpy3toes.scripts.stumpyisland.AccountType;
import stumpy3toes.scripts.stumpyisland.tasks.charactercreation.Gender;

public class GUI extends JFrame implements ActionListener, ListDataListener {
    private JPanel contentPanel;
    private JComboBox accountTypeComboBox;
    private JCheckBox enterMainlandCheckBox;
    private JButton startButton;
    private JComboBox genderChoiceComboBox;
    private JCheckBox randomiseCharacterCheckBox;
    private JCheckBox userEnterPin;

    private final GUIListener listener;
    private final DefaultComboBoxModel accountTypeComboBoxModel;
    private final DefaultComboBoxModel genderChoiceComboBoxModel;

    private boolean started = false;

    public GUI(final GUIListener listener) {
        super("Stumpy Island Options");

        this.listener = listener;

        accountTypeComboBoxModel = new DefaultComboBoxModel();
        for (AccountType accountType : AccountType.values()) {
            accountTypeComboBoxModel.addElement(accountType.name());
        }
        accountTypeComboBox.setModel(accountTypeComboBoxModel);
        accountTypeComboBoxModel.addListDataListener(this);

        genderChoiceComboBoxModel = new DefaultComboBoxModel();
        for (Gender gender : Gender.values()) {
            genderChoiceComboBoxModel.addElement(gender.name());
        }
        genderChoiceComboBox.setModel(genderChoiceComboBoxModel);

        startButton.addActionListener(this);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                if (!started) {
                    listener.closed();
                }
            }
        });

        setContentPane(contentPanel);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        pack();

        setLocationRelativeTo(null);
        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == startButton) {
            started = true;
            listener.started(AccountType.valueOf(accountTypeComboBoxModel.getSelectedItem().toString()),
                    Gender.valueOf(genderChoiceComboBoxModel.getSelectedItem().toString()),
                    randomiseCharacterCheckBox.isSelected(), enterMainlandCheckBox.isSelected(),
                    userEnterPin.isSelected());
            dispose();
        }
    }

    @Override
    public void contentsChanged(ListDataEvent e) {
        userEnterPin.setVisible(AccountType.valueOf(accountTypeComboBoxModel.getSelectedItem().toString())
                != AccountType.NORMAL);
        pack();
    }

    @Override
    public void intervalAdded(ListDataEvent e) {
    }

    @Override
    public void intervalRemoved(ListDataEvent e) {
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("Account Type:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        contentPanel.add(label1, gbc);
        accountTypeComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        contentPanel.add(accountTypeComboBox, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add(panel1, gbc);
        startButton = new JButton();
        startButton.setText("Start Script");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(startButton, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Gender Choice:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        contentPanel.add(label2, gbc);
        genderChoiceComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        contentPanel.add(genderChoiceComboBox, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add(panel2, gbc);
        enterMainlandCheckBox = new JCheckBox();
        enterMainlandCheckBox.setSelected(true);
        enterMainlandCheckBox.setText("Enter Mainland");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        panel2.add(enterMainlandCheckBox, gbc);
        randomiseCharacterCheckBox = new JCheckBox();
        randomiseCharacterCheckBox.setSelected(true);
        randomiseCharacterCheckBox.setText("Randomise Character");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(randomiseCharacterCheckBox, gbc);
        userEnterPin = new JCheckBox();
        userEnterPin.setText("Stop for user to enter pin for ironman");
        userEnterPin.setVisible(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(userEnterPin, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }
}
